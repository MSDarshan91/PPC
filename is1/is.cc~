#include "is.h"
#include "vector.h"
double calObj(double4_t* inter,int nx,int ny,int x0,int y0,int x1,int y1,double4_t VPC,int X, int Y)
{
	double4_t VXC = double_0;
	double4_t ret = double_0;
	double re = 0.0;
	for(int y=y0; y< y1; y++)
		for(int x=x0; x< x1; x++)
		{
			VXC += inter[y*nx+x];
		}
		ret = ((VXC*VXC)/X) + (((VPC - VXC) * (VPC - VXC))/ Y);
		for(int i =0;i<4;i++)
			re += ret[i];
	return re;
}

Result segment(int ny, int nx, const float* data) {
    // FIXME
	double4_t inter[nx*ny] ;
	double4_t VPC = double_0;
	double result = 999999999999.0;
	for(int y=0; y<ny; y++)
		for(int x=0; x<nx; x++)
		{
			inter[y*nx+x][0]= data[y*nx+x];
			inter[y*nx+x][1]= data[y*nx+x+1];
			inter[y*nx+x][2]= data[y*nx+x+2];
			inter[y*nx+x][3]= 0.0;
			VPC = VPC + inter[y*nx+x];	
		}
	int opt_x0,opt_y0,opt_x1,opt_y1;
	for(int y0 = 0;y0 < ny;y0++)
		for(int x0 = 0;x0 < nx;x0++)
			for(int y1 = y0 + 1 ;y0 <=ny;y1++)			
				for(int x1 = x0 + 1 ;x1 <=nx;x1++)
				{
					int X = (x1-x0)*(y1-y0);
					if(calObj(inter,nx,ny,x0,y0,x1,y1,VPC,X, (nx*ny) - X) < result)
					{
						opt_x0 = x0;
						opt_y0 = y0;
						opt_x1 = x1;
						opt_y1 = y1;	

					}
				}
	double4_t a_star = double_0;
	double4_t b_star = double_0;
	for(int y=opt_y0; y< opt_y1; y++)
		for(int x=opt_x0; x< opt_x1; x++)
		{
			a_star += inter[y*nx+x];
		}
	int X = (opt_x1-opt_x0)*(opt_y1-opt_y0);
	for(int i =0;i<4;i++)
			a_star[i]/X;
	b_star = a_star- VPC;
	Result result { opt_y0,opt_x0,opt_y1,opt_x1, {b_star[0], b_star[1], b_star[2]}, {a_star[0], a_star[1],a_star[2]} };
	return result;
}

